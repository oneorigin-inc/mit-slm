# docker/docker-compose.prod.yml
version: '3.8'

services:
  badge-generator:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - OLLAMA_API_URL=http://ollama:11434/api/generate
      - DATABASE_URL=postgresql://badge_user:${DB_PASSWORD}@postgres:5432/badge_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - badge-data:/app/data
      - badge-assets:/app/assets
      - badge-logs:/app/logs
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - badge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ssl-certs:/etc/ssl/certs
    depends_on:
      - badge-generator
    networks:
      - badge-network

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=badge_db
      - POSTGRES_USER=badge_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - badge-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - badge-network
    command: redis-server --appendonly yes

  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - badge-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  postgres-data:
  redis-data:
  ollama-data:
  badge-data:
  badge-assets:
  badge-logs:
  ssl-certs:

networks:
  badge-network:
    driver: bridge
